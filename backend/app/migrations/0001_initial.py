# Generated by Django 3.0.4 on 2020-06-26 15:19

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Authors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(default='author_name', max_length=200)),
            ],
            options={
                'db_table': 'authors',
            },
        ),
        migrations.CreateModel(
            name='Books',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_title', models.CharField(default='book_title', max_length=200)),
                ('book_synopsis', models.TextField(verbose_name='default_book_synopsis')),
                ('book_publisher', models.CharField(default='default_publisher', max_length=200)),
                ('publication_date', models.DateField()),
                ('genre', models.CharField(choices=[('Action', 'ACTION'), ('Adventure', 'ADVENTURE'), ('Childrens', 'CHILDRENS'), ('Classic', 'CLASSIC'), ('Comic', 'COMIC'), ('Crime', 'CRIME'), ('Drama', 'DRAMA'), ('Fantasy', 'FANTASY'), ('Horror', 'HORROR'), ('Mystery', 'MYSTERY'), ('Poetry', 'POETRY'), ('Scifi', 'SCIFI'), ('Suspense', 'SUSPENSE'), ('Thriller', 'THRILLER'), ('Humor', 'HUMOR'), ('Religion', 'RELIGION'), ('Philosphy', 'PHILOSOPHY'), ('Textbook', 'TEXTBOOK'), ('Travel', 'TRAVEL'), ('Sports', 'SPORTS')], default='Adventure', max_length=50)),
                ('average_rating', models.FloatField(default=0.0)),
            ],
            options={
                'db_table': 'books',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection_type', models.CharField(choices=[('Main', 'MAIN'), ('Named', 'NAMED')], default='Main', max_length=10)),
                ('privacy', models.CharField(choices=[('Public', 'PUBLIC'), ('Private', 'PRIVATE')], default='Public', max_length=10)),
                ('description', models.TextField(default='collection_description')),
                ('collection_name', models.CharField(default='default_collection_name', max_length=200)),
            ],
            options={
                'db_table': 'collection',
            },
        ),
        migrations.CreateModel(
            name='CollectionLists',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'collection_lists',
            },
        ),
        migrations.CreateModel(
            name='WrittenBy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='books', to='app.Authors')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='written_by', to='app.Books')),
            ],
            options={
                'db_table': 'written_by',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='default_name', max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('username', models.CharField(default='default_username', max_length=200)),
                ('collection_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collection_list', to='app.CollectionLists')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.TextField(default='default_review_text')),
                ('rating', models.DecimalField(choices=[(1, '1_STAR'), (2, '2_STAR'), (3, '3_STAR'), (4, '4_STAR'), (5, '5_STAR')], decimal_places=1, max_digits=1)),
                ('date', models.DateField()),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='for_book', to='app.Books')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='by_user', to='app.Users')),
            ],
            options={
                'db_table': 'reviews',
            },
        ),
        migrations.CreateModel(
            name='Reads',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='read_by', to='app.Books')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reader', to='app.Users')),
            ],
            options={
                'db_table': 'reads',
            },
        ),
        migrations.CreateModel(
            name='Contains',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='within', to='app.Books')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contains', to='app.Collection')),
            ],
            options={
                'db_table': 'contains',
            },
        ),
        migrations.AddField(
            model_name='collection',
            name='collection_list',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='part_of', to='app.CollectionLists'),
        ),
    ]
